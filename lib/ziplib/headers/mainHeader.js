var Utils=require("../util"),Constants=Utils.Constants;module.exports=function(){var t=0,n=0,e=0,o=0,s=0;return{get diskEntries(){return t},set diskEntries(e){t=n=e},get totalEntries(){return n},set totalEntries(e){n=t=e},get size(){return e},set size(t){e=t},get offset(){return o},set offset(t){o=t},get commentLength(){return s},set commentLength(t){s=t},get mainHeaderSize(){return Constants.ENDHDR+s},loadFromBinary:function(r){if(r.length!=Constants.ENDHDR||r.readUInt32LE(0)!=Constants.ENDSIG)throw Utils.Errors.INVALID_END;t=r.readUInt16LE(Constants.ENDSUB),n=r.readUInt16LE(Constants.ENDTOT),e=r.readUInt32LE(Constants.ENDSIZ),o=r.readUInt32LE(Constants.ENDOFF),s=r.readUInt16LE(Constants.ENDCOM)},toBinary:function(){var r=new Buffer(Constants.ENDHDR+s);return r.writeUInt32LE(Constants.ENDSIG,0),r.writeUInt32LE(0,4),r.writeUInt16LE(t,Constants.ENDSUB),r.writeUInt16LE(n,Constants.ENDTOT),r.writeUInt32LE(e,Constants.ENDSIZ),r.writeUInt32LE(o,Constants.ENDOFF),r.writeUInt16LE(s,Constants.ENDCOM),r.fill(" ",Constants.ENDHDR),r},toString:function(){return'{\n	"diskEntries" : '+t+',\n	"totalEntries" : '+n+',\n	"size" : '+e+' bytes,\n	"offset" : 0x'+o.toString(16).toUpperCase()+',\n	"commentLength" : 0x'+s+"\n}"}}};